version: '3.8'

services:
  django_be:
    build:
      context: ./django
      dockerfile: ./Dockerfile.dev
    env_file:
      - ./.env
    # command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    # command: ls -hal 
    # command: >
    #   sh -c " python django/manage.py migrate --no-input &&
    #   python django/manage.py collectstatic --no-input &&
    #   python django/manage.py runserver 0.0.0.0:8000"
    command: /start-django

    volumes:
      - .:/app
      - static_volume:/app/django/staticfiles
      - media_volume:/app/django/mediafiles
    # ports:
    #   - "8000:8000"
    depends_on:
      - db
    networks:
      - language-app
    expose: 
      - 8000

  db:
    image: postgres:15.3-alpine
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db
    networks:
      - language-app

  redis:
    image: redis:7.0.11-alpine
    networks:
      - language-app


  nginx:
      restart: always
      depends_on:
          - django_be
      volumes:
          - static_volume:/app/staticfiles
          - media_volume:/app/mediafiles
      build:
          context: ./nginx
          dockerfile: Dockerfile
      ports:
          - "8080:80"
      networks:
          - language-app

  celery_worker:
      build:
          context: ./django
          dockerfile: Dockerfile.dev
      command: /start-celeryworker
      volumes:
          - .:/app
      env_file:
          - .env.dev
      depends_on:
          - redis
          - db
      networks:
        - language-app

  flower:
      build:
          context: ./django
          dockerfile: Dockerfile.dev
      command: /start-flower
      volumes:
          - .:/app
      env_file:
          - .env.dev
      ports:
          - "5557:5555"
      depends_on:
          - redis
          - db
      networks:
        - language-app


volumes:
  postgres_data:
  static_volume: 
  media_volume:

networks:
  language-app:


